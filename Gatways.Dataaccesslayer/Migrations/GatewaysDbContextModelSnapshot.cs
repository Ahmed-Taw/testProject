// <auto-generated />
using System;
using Gatways.Dataaccesslayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gatways.Dataaccesslayer.Migrations
{
    [DbContext(typeof(GatewaysDbContext))]
    partial class GatewaysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gatways.Dataaccesslayer.Infrastructure.Entities.GatewayEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IP4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gateways");

                    b.HasData(
                        new
                        {
                            Id = "Test-gateway-1",
                            IP4 = "192.158.1.38",
                            Name = "Gate-1"
                        },
                        new
                        {
                            Id = "Test-gateway-2",
                            IP4 = "192.158.1.100",
                            Name = " Gate-2"
                        },
                        new
                        {
                            Id = "Test-gateway-3",
                            IP4 = "192.158.1.50",
                            Name = "Gate-3"
                        });
                });

            modelBuilder.Entity("Gatways.Dataaccesslayer.Infrastructure.Entities.PeripheralDeviceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.HasIndex("StatusId");

                    b.ToTable("PeripheralDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 866, DateTimeKind.Utc).AddTicks(8011),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = "Gate1-1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(306),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = " Gate1-2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(351),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = "Gate1-3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(354),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = "Gate1-4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(356),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = " Gate1-5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(358),
                            GatewayId = "Test-gateway-1",
                            StatusId = 2,
                            Vendor = "Gate1-6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(359),
                            GatewayId = "Test-gateway-1",
                            StatusId = 2,
                            Vendor = "Gate1-7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(361),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = "Gate1-8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(362),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = " Gate1-9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(364),
                            GatewayId = "Test-gateway-1",
                            StatusId = 1,
                            Vendor = "Gate1-10"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(365),
                            GatewayId = "Test-gateway-2",
                            StatusId = 1,
                            Vendor = "Gate1-8"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(367),
                            GatewayId = "Test-gateway-2",
                            StatusId = 2,
                            Vendor = " Gate1-9"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(369),
                            GatewayId = "Test-gateway-2",
                            StatusId = 1,
                            Vendor = "Gate1-10"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2021, 6, 5, 17, 6, 23, 867, DateTimeKind.Utc).AddTicks(370),
                            GatewayId = "Test-gateway-3",
                            StatusId = 1,
                            Vendor = "Gate1-8"
                        });
                });

            modelBuilder.Entity("Gatways.Dataaccesslayer.Infrastructure.Entities.PeripheralDeviceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PeripheralDeviceStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "OnLine"
                        },
                        new
                        {
                            Id = 2,
                            Description = "OffLine"
                        });
                });

            modelBuilder.Entity("Gatways.Dataaccesslayer.Infrastructure.Entities.PeripheralDeviceEntity", b =>
                {
                    b.HasOne("Gatways.Dataaccesslayer.Infrastructure.Entities.GatewayEntity", "Gateway")
                        .WithMany("AssociatedPeripheralDevices")
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gatways.Dataaccesslayer.Infrastructure.Entities.PeripheralDeviceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
